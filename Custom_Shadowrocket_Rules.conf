# Shadowrocket 分组配置
[General]
bypass-system = true
# 跳过代理。此选项强制这些域名或IP的连接范围由Shadowrocket TUN接口来处理，而不是Shadowrocket代理服务器。此选项用于解决一些应用程序的一些兼容性问题。
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,captive.apple.com,*.ccb.com,*.abchina.com.cn,*.psbc.com,www.baidu.com
# TUN旁路路由。Shadowrocket TUN接口只能处理TCP协议。使用此选项可以绕过指定的IP范围，让其他协议通过。
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32
# DNS覆写。使用普通DNS或加密DNS（如doh、doq、dot等）覆盖默认的系统DNS。有些dns over https支持http3，所以尝试查询，如果支持就切换到http3，可在doh链接后面加上#no-h3关闭。doh强制通过h3查询的写法是将“https”改成“h3”，如h3://dns.alidns.com/dns-query。
#dns-server = system
# 备用DNS。当覆写DNS查询失败或查询时间超过2秒，Shadowrocket会自动回退备用DNS。如需指定多个DNS，可用逗号分隔。system表示回退到系统DNS。
fallback-dns-server = system
# 启用IPv6支持。false表示不启用，true表示启用。（注：即使不启用此选项，当本地网络环境支持IPv6，并且节点域名支持IPv6解析，Shadowrocket也会使用节点的IPv6地址进行访问。解决方法是关闭节点域名的IPv6解析，或者在配置文件的[Host]项目下为节点域名指定IP地址。）
ipv6 = true
# 首选IPv6。优先向IPv6的DNS服务器查询AAAA记录，优先使用AAAA记录。false表示不启用。
prefer-ipv6 = true
# 直连的域名类规则使用系统dns进行查询。false表示不启用。
dns-direct-system = true
# ping数据包自动回复。
icmp-auto-reply = true
# 不开启时，「重写的REJECT策略」默认只有在配置模式下生效。开启后，可以令该策略在其他全局路由模式下都生效。
always-reject-url-rewrite = false
# 私有IP应答。如果不启用此选项，域名解析返回私有IP，Shadowrocket会认为该域名被劫持而强制使用代理。
private-ip-answer = true
# 直连域名解析失败后使用代理。false表示不启用。
dns-direct-fallback-proxy = false
# TUN包含路由。默认情况下，Shadowrocket接口会声明自己为默认路由，但由于Wi-Fi接口的路由较小，有些流量可能不会通过Shadowrocket接口。使用此选项可以添加一个较小的路由表。
tun-included-routes = 
# 总是真实IP。此选项要求Shadowrocket在TUN处理DNS请求时返回一个真实的IP地址而不是假的IP地址。
always-real-ip = 
# DNS劫持。有些设备或软件总是使用硬编码的DNS服务器，例如Netflix通过Google DNS(8.8.8.8或8.8.4.4)发送请求，您可以使用此选项来劫持查询。
hijack-dns = 8.8.8.8:53,8.8.4.4:53
# 当UDP流量匹配到规则里不支持UDP转发的节点策略时重新选择回退行为，可选行为包括DIRECT、REJECT。DIRECT表示直连转发UDP流量，REJECT表示拒绝转发UDP流量。
udp-policy-not-supported-behaviour = REJECT
# 包含配置。如“include=a.conf”表示当前配置包含另一个配置a.conf的内容，当前配置的优先级高于a.conf。此选项是对配置建立包含关系，以满足同时使用多个配置的需求。
include = 
# 此选项允许返回一个虚假的IP地址，如“stun-response-ip=1.1.1.1”、“stun-response-ipv6=::1”，目的是防止真实IP地址泄漏，提高WebRTC的隐私和安全性。
stun-response-ip=
stun-response-ipv6=
[Proxy]

[Proxy Group]
# 代理分组类型：
# select:手动切换节点。
# url-test:自动切换延迟最低节点。
# fallback:节点挂掉时自动切换其他可用节点。
# load-balance:不同规则的请求使用分组里的不同节点进行连接。
# random:随机使用分组里的不同节点进行连接。
# ----------
# policy-regex-filter表示正则式或关键词筛选，常用写法：
# 保留节点名称含有关键词A和B的节点:
# (?=.*(A))^(?=.*(B))^.*$
# 保留节点名称含有关键词A或B的节点:
# A|B
# 排除节点名称含有关键词A或B的节点:
# ^((?!(A|B)).)*$
# 保留节点名称含有关键词A并排除含有关键词B的节点:
# (?=.*(A).)^((?!(B)).)*$
# ----------
# 代理分组其他设置参数：
# interval:指定间隔多长时间后需要重新发起测试。
# timeout:如果测试在超时前未完成，放弃测试。
# tolerance:只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url:指定要测试的URL。
# ----------
# 不含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),策略(如direct,proxy,订阅名称,代理分组,节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# 含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),policy-regex-filter=正则式或关键词筛选,interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# 开启订阅筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),订阅名称(多个订阅时,用逗号分隔),use=true,policy-regex-filter=正则式或关键词筛选(省略该参数时,表示匹配对应订阅的全部节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# ----------

🚀 节点选择 = select,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=0
🚀 手动切换 = select,policy-regex-filter=.*,select=0
♻️ 自动选择 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=.*
🍎 苹果服务 = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=0
Ⓜ️ 微软服务 = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=0
🍘️ 小米服务 = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=0
🚀 GitHub = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=1
📲 Telegram = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=1
💬 ChatGPT = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=1
Ⓜ️ Copilot = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=1
🎶 TikTok = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=1
📹 YouTube = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=4
🎥 Netflix = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=4
🎥 Disney+ = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=4
📺 Bahamut = select,🌐 全球直连,🇹🇼 台湾节点,♻️ 自动选择,🚀 手动切换,select=1
🌍 国内媒体 = select,🌐 全球直连,🇭🇰 香港节点,🇹🇼 台湾节点,select=0
🌍 国外媒体 = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=4
🎮 游戏平台 = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=0
🎮 Steam = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=0
🐟 漏网之鱼 = select,🌐 全球直连,🇭🇰 香港节点,🇺🇸 美国节点,🇯🇵 日本节点,🇸🇬 新加坡节点,🇹🇼 台湾节点,🇨🇦 加拿大节点,🇬🇧 英国节点,🇫🇷 法国节点,🇩🇪 德国节点,🇳🇱 荷兰节点,🇹🇷 土耳其节点,🇰🇷 韩国节点,🇮🇳 印度节点,🇻🇳 越南节点,♻️ 自动选择,🚀 手动切换,select=2

🌐 全球直连 = select, DIRECT
🇭🇰 香港节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=港|HK|hk|Hong Kong|HongKong|Hong|hong|香港|深港|沪港|京港
🇹🇼 台湾节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=TW|Taiwan|taiwan|台湾|台北|台中|新北|彰化
🇯🇵 日本节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=JP|Japan|japan|Tokyo|tokyo|日本|东京|大阪|京日|苏日|沪日|上日|川日|深日|广日
🇸🇬 新加坡节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=SG|Sing|sing|新加坡|狮城|沪新|京新|深新|杭新|广新
🇰🇷 韩国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=KR|Korea|korea|KOR|韩国|首尔|韩|韓|春川
🇮🇳 印度节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=印度|India|新德里
🇻🇳 越南节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=越南|Vietnam|河内
🇺🇸 美国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=US|USA|America|america|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States
🇨🇦 加拿大节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=加拿大|Canada|渥太华
🇬🇧 英国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=英国|Great Britain|Britain
🇫🇷 法国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=法国|France
🇩🇪 德国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=德国|Germany
🇳🇱 荷兰节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=荷兰|Netherlands
🇹🇷 土耳其节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=土耳其|Turkey；

[Rule]
# 规则集
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Lan/Lan.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Direct/Direct.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list,🍎 苹果服务
RULE-SET,https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/Rule/Custom_Direct.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/Rule/Custom_Proxy.list,🚀 节点选择
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.list,🇬 谷歌服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PrivateTracker/PrivateTracker.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Telegram/Telegram.list,📲 Telegram
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list,💬 ChatGPT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Copilot/Copilot.list,Ⓜ️ Copilot
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GitHub/GitHub.list,🚀 GitHub
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OneDrive/OneDrive.list,Ⓜ️ 微软云盘
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Microsoft/Microsoft.list,Ⓜ️ 微软服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/XiaoMi/XiaoMi.list,🍘️ 小米服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/NetEaseMusic/NetEaseMusic.list,🎶 网易音乐
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Epic/Epic.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Blizzard/Blizzard.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Sony/Sony.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Nintendo/Nintendo.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Steam/Steam.list,🎮 Steam
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/TikTok/TikTok.list,🎶 TikTok
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list,📹 YouTube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Netflix/Netflix.list,🎥 Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Disney/Disney.list,🎥 Disney+
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Bahamut/Bahamut.list,📺 Bahamut
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMedia/ChinaMedia.list,🌍 国内媒体
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GlobalMedia/GlobalMedia.list,🌍 国外媒体
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list,🚀 节点选择
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMax/ChinaMax.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Download/Download.list,DIRECT
GEOIP,CN,DIRECT
FINAL,PROXY

[Host]
# 域名指定本地值：
# example.com=1.2.3.4
# 域名指定DNS服务器：
# example.com=server:1.2.3.4
# wifi名称指定DNS服务器，如需指定多个DNS，可用逗号分隔：
# ssid:wifi名称=server:1.2.3.4
# ----------
*.apple.com=server:system
*.apple.cn=server:system
*.cdn-apple.com=server:system
*.icloud.com=server:system
*.icloud-content.com=server:system
localhost = 127.0.0.1

[URL Rewrite]
# Google搜索引擎防跳转的重写。
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302

[MITM]
# Shadowrocket仅会解密hostname指定的域名的请求，可以使用通配符。也可以使用前缀 - 排除特定主机名，如 -*.example.com。iOS系统和某些应用有严格的安全策略，仅信任某些特定的证书，对这些域名启动解密可能导致问题，如 *.apple.com，*.icloud.com。
hostname = *.google.cn
